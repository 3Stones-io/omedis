defmodule Omedis.Repo.Migrations.CreateEvents do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:events, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :activity_id,
          references(:activities,
            column: :id,
            name: "events_activity_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :dtend, :utc_datetime_usec
      add :dtstart, :utc_datetime_usec, null: false
      add :summary, :text, null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "events_user_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :created_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :organisation_id,
          references(:organisations,
            column: :id,
            name: "events_organisation_id_fkey",
            type: :uuid,
            prefix: "public",
            on_delete: :delete_all
          )
    end

    create index(:events, [:dtstart])
    create index(:events, [:dtend])
  end

  def down do
    drop index(:events, [:dtstart])
    drop index(:events, [:dtend])

    drop constraint(:events, "events_activity_id_fkey")
    drop constraint(:events, "events_user_id_fkey")
    drop constraint(:events, "events_organisation_id_fkey")

    drop table(:events)
  end
end
