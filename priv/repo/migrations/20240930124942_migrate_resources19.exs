defmodule Omedis.Repo.Migrations.MigrateResources19 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    rename table(:log_categories), :tenant_id, to: :group_id

    drop constraint(:log_categories, "log_categories_tenant_id_fkey")

    drop_if_exists unique_index(:log_categories, [:color_code, :tenant_id],
                     name: "log_categories_unique_color_code_position_index"
                   )

    drop_if_exists unique_index(:log_categories, [:position, :tenant_id],
                     name: "log_categories_unique_position_index"
                   )

    alter table(:log_categories) do
      modify :group_id,
             references(:groups,
               column: :id,
               name: "log_categories_group_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    execute(
      "ALTER TABLE log_categories alter CONSTRAINT log_categories_group_id_fkey NOT DEFERRABLE"
    )

    create unique_index(:log_categories, [:color_code, :group_id],
             name: "log_categories_unique_color_code_position_index"
           )

    create unique_index(:log_categories, [:position, :group_id],
             name: "log_categories_unique_position_index"
           )
  end

  def down do
    drop_if_exists unique_index(:log_categories, [:position, :group_id],
                     name: "log_categories_unique_position_index"
                   )

    drop_if_exists unique_index(:log_categories, [:color_code, :group_id],
                     name: "log_categories_unique_color_code_position_index"
                   )

    drop constraint(:log_categories, "log_categories_group_id_fkey")

    alter table(:log_categories) do
      modify :tenant_id,
             references(:tenants,
               column: :id,
               name: "log_categories_tenant_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    create unique_index(:log_categories, [:position, :tenant_id],
             name: "log_categories_unique_position_index"
           )

    create unique_index(:log_categories, [:color_code, :tenant_id],
             name: "log_categories_unique_color_code_position_index"
           )

    rename table(:log_categories), :group_id, to: :tenant_id
  end
end
